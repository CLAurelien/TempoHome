# TODO Uncomment Healthcheck and if when the server is up

name: Deploy on Raspberry Pi (Main)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start tempo.service if not running
        run: |
          if ! systemctl is-active --quiet tempo.service; then
            echo "ðŸ”¹ tempo.service n'est pas actif, dÃ©marrage..."
            sudo systemctl start tempo.service
          else
            echo "ðŸ”¹ tempo.service dÃ©jÃ  actif"
          fi

      # --- Healthcheck avant dÃ©ploiement ---
#      - name: Test API Healthcheck (avant dÃ©ploiement)
#        id: apicheck
#        run: |
#          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health || echo 000)
#          echo "API status code: $STATUS"
#          if [[ "$STATUS" =~ ^(200|201|204)$ ]]; then
#            echo "API healthy"
#          else
#            echo "api_unhealthy=true" >> $GITHUB_ENV
#
#      - name: Notify Discord if API failed (avant dÃ©ploiement)
#        if: env.api_unhealthy == 'true'
#        run: |
#          curl -H "Content-Type: application/json" \
#               -d "{\"content\": \"ðŸš¨ TempoHome Main : l'API locale du Raspberry Pi ne rÃ©pond pas (Healthcheck HTTP Ã©chouÃ©).\"}" \
#               ${{ secrets.DISCORD_WEBHOOK }}
#          exit 1

      - name: Run deploy script
#        if: env.api_unhealthy != 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh main

      # --- Healthcheck aprÃ¨s dÃ©ploiement ---
#      - name: Test API Healthcheck (aprÃ¨s dÃ©ploiement)
#        if: env.api_unhealthy != 'true'
#        id: postapicheck
#        run: |
#          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health || echo 000)
#          echo "Post-deploy API status code: $STATUS"
#          if [[ "$STATUS" =~ ^(200|201|204)$ ]]; then
#            echo "API OK post-deploy"
#          else
#            echo "api_post_unhealthy=true" >> $GITHUB_ENV

      - name: Notify Discord if post-deploy API failed
#        if: env.api_post_unhealthy == 'true'
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"ðŸš¨ TempoHome Main : l'API ne rÃ©pond plus aprÃ¨s le dÃ©ploiement (Ã©chec post-deploy).\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}
          exit 1

      - name: Notify Discord success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"ðŸŽ‰ DÃ©ploiement MAIN rÃ©ussi sur le Raspberry Pi (self-hosted runner).\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify Discord failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"ðŸš¨ Ã‰chec du dÃ©ploiement MAIN sur le Raspberry Pi.\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}
